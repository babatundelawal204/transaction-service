/*
 * This file is generated by jOOQ.
 */
package dev.babatunde.transferservice.repository.jooq.tables.records;


import dev.babatunde.transferservice.repository.jooq.tables.Transactions;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transactions.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transactions.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transactions.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transactions.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.transactions.currency</code>.
     */
    public void setCurrency(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transactions.currency</code>.
     */
    public String getCurrency() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.transactions.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transactions.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.transactions.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.transactions.status</code>.
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transactions.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.transactions.status_message</code>.
     */
    public void setStatusMessage(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.transactions.status_message</code>.
     */
    public String getStatusMessage() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.transactions.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.transactions.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.transactions.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.transactions.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>public.transactions.is_commission_worthy</code>.
     */
    public void setIsCommissionWorthy(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.transactions.is_commission_worthy</code>.
     */
    public Boolean getIsCommissionWorthy() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.transactions.commission</code>.
     */
    public void setCommission(BigDecimal value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.transactions.commission</code>.
     */
    public BigDecimal getCommission() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>public.transactions.category</code>.
     */
    public void setCategory(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.transactions.category</code>.
     */
    public String getCategory() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.transactions.channel</code>.
     */
    public void setChannel(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.transactions.channel</code>.
     */
    public String getChannel() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.transactions.payment_reference</code>.
     */
    public void setPaymentReference(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.transactions.payment_reference</code>.
     */
    public String getPaymentReference() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.transactions.fee</code>.
     */
    public void setFee(BigDecimal value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.transactions.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(UUID id, UUID accountId, String currency, String description, BigDecimal amount, String status, String statusMessage, OffsetDateTime createdAt, OffsetDateTime updatedAt, Boolean isCommissionWorthy, BigDecimal commission, String category, String channel, String paymentReference, BigDecimal fee) {
        super(Transactions.TRANSACTIONS);

        setId(id);
        setAccountId(accountId);
        setCurrency(currency);
        setDescription(description);
        setAmount(amount);
        setStatus(status);
        setStatusMessage(statusMessage);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setIsCommissionWorthy(isCommissionWorthy);
        setCommission(commission);
        setCategory(category);
        setChannel(channel);
        setPaymentReference(paymentReference);
        setFee(fee);
        resetChangedOnNotNull();
    }
}
